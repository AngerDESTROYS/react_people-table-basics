{"version":3,"sources":["components/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","className","Loader","PeopleTable","people","slug","useParams","map","person","classNames","to","sex","name","born","died","motherName","some","man","find","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","useEffect","data","catch","error","console","finally","length","getLinkClass","isActive","App","role","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4cd850ec.chunk.js","sourcesContent":["export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\nconst NOTHING = '-';\n\nexport const PeopleTable = ({ people }: { people: Person[] }) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person: Person) => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <Link to={`/people/${person.slug}`} className={classNames({ 'has-text-danger': person.sex === 'f' })}>\n                {person.name}\n              </Link>\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.motherName\n                && people.some(man => man.name === person.motherName) ? (\n                  <Link\n                    to={`/people/${people.find(man => man.name === person.motherName)?.slug || ''\n                    }`}\n                    className=\"has-text-danger\"\n                  >\n                    {person.motherName}\n                  </Link>\n                ) : (\n                  person.motherName || NOTHING\n                )}\n            </td>\n            <td>\n              {person.fatherName\n                && people.some(man => man.name === person.fatherName) ? (\n                  <Link\n                    to={`/people/${people.find(man => man.name === person.fatherName)?.slug || ''\n                    }`}\n                  >\n                    {person.fatherName}\n                  </Link>\n                ) : (\n                  person.fatherName || NOTHING\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error('Error fetching people data:', error);\n        setIsLoadingError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div data-cy=\"peoplePage\">\n      <h1 className=\"title\">People Page</h1>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          {isLoadingError ? (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          ) : (\n            <div>\n              {people.length === 0 ? (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              ) : (\n                <PeopleTable people={people} />\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"block\">\n          <div className=\"box table-container\">\n\n            <Routes>\n              <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n              <Route path=\"/people\" element={<PeoplePage />} />\n              <Route path=\"/people/:slug\" element={<PeoplePage />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}